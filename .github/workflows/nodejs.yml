# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]
        mongodb-version: [4.4]

    permissions:
      pull-requests: write

    steps:
    - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
      with:
        fetch-depth: 0

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}

    - name: Start MongoDB
      uses: supercharge/mongodb-github-action@v1.10.0
      with:
        mongodb-version: ${{ matrix.mongodb-version }}

    - name: Install dependencies
      run: npm i

    - name: Test
      id: test
      run: |
        npm run test-coverage-ci || echo "Silently ignoring coverage threshold limit..."

    - name: Check if a valid lcov.info file is generated
      id: check-lcov-non-empty
      run: |
        if [ -s "./coverage/lcov.info" ]; then
          echo "lcov.info is not empty."
          echo "isNotEmpty=true" >> $GITHUB_OUTPUT
        else
          echo "lcov.info is empty."
          echo "isNotEmpty=false" >> $GITHUB_OUTPUT
        fi

    - name: Install LCOV
      if: ${{ steps.check-lcov-non-empty.outputs.isNotEmpty == 'true'}}
      run: |
        sudo apt-get update && sudo apt-get install --assume-yes lcov

    - name: Report code coverage
      if: ${{ steps.check-lcov-non-empty.outputs.isNotEmpty == 'true' }}
      uses: zgosalvez/github-actions-report-lcov@v4
      with:
        coverage-files: ./coverage/lcov.info
        github-token: ${{ secrets.GITHUB_TOKEN }}
        update-comment: true

    # - name: Exit if coverage condition not met
    #   if: ${{ steps.test.outputs.exit_code }} != 0
    #   run: exit ${{ steps.test.outputs.exit_code }}

